[
  {
    "objectID": "required-packages.html",
    "href": "required-packages.html",
    "title": "2  Required Packages",
    "section": "",
    "text": "2.1 Installing the Packages\nAs stated earlier we will be using a combination of tidyverse and time series specific packages (tidyverts)\nThere is another supporting package in the tidyverts ecosystem caled fabletools. This is a supporting package that provides some underlying tools for the fables package\nTo install the above packages, run the following code once in your R console:\ninstall.packages(c(\"tidyverse\", \"tsibble\", \"fable\", \"feasts\", \"readxl\"))",
    "crumbs": [
      "Setting Up",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Required Packages</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Timeseries Analysis - the Tidyverse Way",
    "section": "",
    "text": "Welcome\nA practical, beginner-friendly guide using tsibble, fable and friends\nHave you ever looked at a line chart of sales, website traffic, stock prices or weather patterns and thought, “I wonder what happens next?” – then you are in the right place.\nIn this book, we will take your basic R skills and transform them into real-world forecasting power – all using the clean modern tools of the Tidyverse. No black-box algorithms or confusing jargon. Just a step by step journey into understanding patterns over time and predicting the future with confidence.\nWhether you are a student, analyst or data enthusiast, time series skills are essential in your field – and surprisingly accessible. By the end of this guide, you will be able to:\nSo grab your pen and paper (whatever it is you want to grab 😁), fire up RStudio and let’s turn your curiosity into prediction. 📊✨",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Timeseries Analysis - the Tidyverse Way",
    "section": "",
    "text": "Visualise trends and seasonality like a pro\nDecompose complex patterns\nBuild and compare forecasts using smart, automated models\nAnd most importantly explain your results clearly",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "required-packages.html#installing-the-packages",
    "href": "required-packages.html#installing-the-packages",
    "title": "2  Required Packages",
    "section": "",
    "text": "Tip\n\n\n\nIf you already have them installed, you do not need to reinstall. You can check if a package is installed by typing \"fable\" %in% installed.packages()\n\n\n\n2.1.1 Loading the Packages\nAfter installing any package you have to load it before it becomes available for use. Each time you start a new R session, you will need to load the packages you will use again. Doing it correctly saves headaches. You can load a package in R with the library() function.\n\n# Load all packages\nlibrary(tidyverse)          # Core data wrangling + visualisation\nlibrary(tsibble)            # Tidy time series structure\nlibrary(fable)              # Forecasting\nlibrary(feasts)             # Time series exploration tools\nlibrary(readxl)             # Importing Excel files\n\nThink of the install command as buying a tool and placing it in your garage (your computer’s library). The library() function is like grabbing the tool from your garage and bringing it to your workbench (your current R session) so you can use it\n\n\n\n\n\n\nTip\n\n\n\nIf you see a message like “there is no package called…”, it means you have not installed it yet. Go back to the installation step.",
    "crumbs": [
      "Setting Up",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Required Packages</span>"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 What is Time Series Data?\nTime series data consists of observations recorded over time, usually at regular intervals (e.g., daily, monthly, yearly). Some examples include:\nWhat makes time series special is that time is not just a variable, It carries important structure and dependencies. What happened today can depend on what happened yesterday, last month or even last year. This temporal uniqueness is what makes time series very powerful.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#what-is-time-series-data",
    "href": "intro.html#what-is-time-series-data",
    "title": "1  Introduction",
    "section": "",
    "text": "Monthly rainfall totals\nDaily COVID-19 cases\nHourly temperature readings\nYearly population counts",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#why-time-series-analysis-matters",
    "href": "intro.html#why-time-series-analysis-matters",
    "title": "1  Introduction",
    "section": "1.2 Why Time Series Analysis Matters",
    "text": "1.2 Why Time Series Analysis Matters\nTime series analysis helps us to understand the past, monitor the present, and predict the future. Some real world examples are:\n\nPublic Health: Forecasting disease outbreaks or hospital admissions\nFinance: Predicting stock prices, currency exchange rates, or sales revenue.\nEnvironmental Science: Analysing temperature trends or rainfall patterns for climate studies\nEngineering: Monitoring sensor data to detect faults or changes in performance\n\nIn many cases, this analysis supports decision making — whether it is planning resources, anticipating risks, or detecting unusual patterns.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "intro.html#traditional-vs.-tidy-approach",
    "href": "intro.html#traditional-vs.-tidy-approach",
    "title": "1  Introduction",
    "section": "1.3 Traditional vs. Tidy Approach",
    "text": "1.3 Traditional vs. Tidy Approach\nHistorically, time series in R has been handled using ts objects and packages like forecast. These are still useful, but they do not fit perfectly with the modern tidy philosophy; data frames, pipelines and consistent syntax.\nWe will follow the tidy time series workflow using the tidyverse ecosystem. The workflow uses packages from the tidyverts ecosystem:\n\ntsibble: A tidy data structure for time series (like a tibble but with special time handling)\nfable: For forecasting models (ARIMA, ETS, etc) in a tidy way.\nfeasts: For exploratory analysis (seasonal plots, decomposition, autocorrelation).\nlubridate: For working with dates and times.\nggplot2: For beautiful and flexible visualisations\ndplyr/tidyr/tibble: For general data wrangling\n\n\n1.3.1 The Tidy Time Series Workflow\nThe tidyverse ecosystem in R emphasises clean, readable code and consistent data structure. For time series, the modern approach uses the tidyverts suite of packages.\nThe typical flow we will follow includes:\n\n🔧 Data Preparation: Load and tidy data. Convert the data to a tsibble object so R knows how to handle time.\n🔍 Explore: Visualise trends, seasonality, patterns\n🧩 Decompose: Break down components (trends, seasonal, noise)\n🖥️ Model: Fit forecasting models (simple —&gt; advanced)\n📈 Forecast: Generate future predictions\n📏 Evaluate: Check how good the forecasts are (accuracy assessment)\n\nThis workflow is clean, consistent and integrates smoothly with other tidyverse tools you might already know.\n\n\n\n\n\n\nTip\n\n\n\ntidyverse: collection of packages designed for general data science\ntidyverts: collection of packages specifically for time series analysis\nThey all follow the tidy philosophy, structure and grammar\n\n\n\n\n1.3.2 Data We Will Use\nWe will start with some built-in datasets from the tsibble package so every on can follow along without downloading external files:\n\naus_production — Quarterly production values for Australian industries.\ntourism — Quarterly overnight trips in different Australian regions.\n\nLater, we shall also show how to use real-life datasets — for example, population growth or GDP growth data from Ghana, to make the examples relatable and practical\nYou can download the datasets used here gh_data.csv .\n\n\n1.3.3 What You Will Need to Follow Along\n\nBasic R Knowledge: You should know how to load packages, run functions, and work with data frames\nRStudio installed for a smooth workflow\nInternet connection (for package installation and possible data download)\n\n\n1.3.3.1 By the end of this tutorial, you will be able to:\n\nHandle date/time data with ease\nExplore time series visually and statistically\nBuild forecasts using tidyverse-style functions\nApply your skills to your own datasets in research or work",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Setting Up",
    "section": "",
    "text": "Before diving into analysis, let;s make sure we have all the tools we need to get ready. We need to set up our R environment with the right tools. The tidyverts ecosystem — built around the Tidyverse — makes time series analysis intuitive, consistent and visual.\n\n\n\n\n\n\n\nTidyverts Package Collection\n\n\n\n\n\nTidyverse Package Collection\n\n\nThis section will cover installing and loading the packages we will use and checking that your R environment is prepared for a smooth time series work\nWe will address the following:\n\n2  Required Packages: This part will cover all the packages we will need, how to install and load them for use in our R environment.\n3  Setting Up Your RStudio Environment: Here you will see how to keep things organised in a more seamless and orderly manner on your system.\n\nAfter going through this section your R environment will be a fully-equipped time series analysis workshop. You will understand the role of each major package (tsibble, fable, feasts) and how they interoperate.\nMore importantly you will get the practical knowledge to install and load them correctly, setting a stable foundation for every analysis you perform in the following chapters.",
    "crumbs": [
      "Setting Up"
    ]
  },
  {
    "objectID": "environment-setup.html",
    "href": "environment-setup.html",
    "title": "3  Setting Up Your RStudio Environment",
    "section": "",
    "text": "3.1 Quick Test Run\nWe can go ahead and start building our time series analysis task right away after installing and loading the needed packages. However, to keep things organised.\nLet’s run a quick test to ensure everything is working. We shall use a built in dataset\n# Use the 'us_employment' dataset from the fpp3 package built into the tsibble package\nlibrary(fpp3)\nhead(us_employment)\n\n# Lets see if it is a proper tsibble and we can plot it\nus_employment |&gt; \n  filter(Title == \"Total Private\") |&gt; \n  autoplot(Employed) +\n  labs(title = \"US Total Private Employment\",\n       y = \"People\")\nThis “head(us_employment)” line of code should show you a tidy time series dataset with index (time column) and key (group identifier). The codes that follow, if it runs without errors, should also produce a time series plot.\nIf you see all the things mentioned earlier, congratulations! Your environment is ready.",
    "crumbs": [
      "Setting Up",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Setting Up Your RStudio Environment</span>"
    ]
  },
  {
    "objectID": "environment-setup.html#quick-test-run",
    "href": "environment-setup.html#quick-test-run",
    "title": "3  Setting Up Your RStudio Environment",
    "section": "",
    "text": "Note\n\n\n\nThe fpp3 package is a collection of tools and datasets (which we have already seen) for time series forecasting. It was built to accompany the third edition of the book Forecasting: Principles and Practice by Rob J Hyndman and George Athanasopoulos .",
    "crumbs": [
      "Setting Up",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Setting Up Your RStudio Environment</span>"
    ]
  },
  {
    "objectID": "tidy-timeseries.html",
    "href": "tidy-timeseries.html",
    "title": "Working with Time Series Data",
    "section": "",
    "text": "The tidy Approach to Time Series\nTime is the most fundamental dimension in data analysis, yet working with temporal data has traditionally been one of the most frustrating aspects of data science. If you have ever felt less enthusiastic trying to force dates and data into a standard data frame, then here is some good news for you. The Tidyverse provides a coherent, intuitive framework for taming the chaos of temporal data.\nIn this section, we will explore how to work with time series data using the tidy data principles. Rather than wrestling with complex time series objects or memorising some mysterious date formatting codes, you will learn to treat temporal data as just another type of structured data that can be manipulated, visualised and modelled using the same consistent grammar you already know.\n%%{init: {'themeVariables': { 'fontSize': '15pt'}}}%%\n\nflowchart TD\n    A[Raw Time Series Data] --&gt; B{Data Structure}\n    B --&gt;|Traditional| C[Specialized TS Objects]\n    B --&gt;|Tidy| D[tsibble]\n    \n    C --&gt; E[Limited Functions]\n    C --&gt; F[Complex Syntax]\n    C --&gt; G[Isolated Workflow]\n    \n    D --&gt; H[dplyr Verbs]\n    D --&gt; I[ggplot2 Graphics]\n    D --&gt; J[Tidyverse Integration]\n    \n    H --&gt; K[filter, mutate, summarize...]\n    I --&gt; L[geom_line, facet_wrap...]\n    J --&gt; M[Seamless Data Pipeline]\n    \n    K --&gt; N[Flexible Analysis]\n    L --&gt; N\n    M --&gt; N\n    \n    E --&gt; O[Rigid Analysis]\n    F --&gt; O\n    G --&gt; O\n    \n    style D fill:#e1f5fe\n    style N fill:#c8e6c9\n    style O fill:#ffcdd2\nTraditional time series analysis in R has been handled using ts objects and packages like forecast. These are still useful, but they do not fit perfectly with the modern tidyverse philosophy. The tidy approach treats time series as regular dataframes which extends the tibble data structure by incorporating time series components (index and key).\nTable 1: A tidy time series data structure (tsibble)\n\n\n# A tsibble: 6 x 5 [1Q]\n# Key:       Region, State, Purpose [1]\n  Quarter Region   State           Purpose  Trips\n    &lt;qtr&gt; &lt;chr&gt;    &lt;chr&gt;           &lt;chr&gt;    &lt;dbl&gt;\n1 1998 Q1 Adelaide South Australia Business  135.\n2 1998 Q2 Adelaide South Australia Business  110.\n3 1998 Q3 Adelaide South Australia Business  166.\n4 1998 Q4 Adelaide South Australia Business  127.\n5 1999 Q1 Adelaide South Australia Business  137.\n6 1999 Q2 Adelaide South Australia Business  200.\nThis approach unlocks the full power of dplyr's data manipulation verbs, ggplot2's visualisation capabilities and the broader tidyverse ecosystem for temporal data analysis.",
    "crumbs": [
      "Working with Time Series Data"
    ]
  },
  {
    "objectID": "tidy-timeseries.html#what-we-will-cover",
    "href": "tidy-timeseries.html#what-we-will-cover",
    "title": "Working with Time Series Data",
    "section": "What We will Cover",
    "text": "What We will Cover\nThis section is organised into three complementary chapters that builds your time series skills progressively.\n\n4  Tidy Time Series Basics: This chapter will help you master the fundamental building blocks of time series data analysis. It establishes the foundation for all subsequent time series work.\n5  Dealing with Time Gaps and Irregularities: Real world time series data is messy, with missing observations, irregular intervals and unexpected gaps. This chapter teaches you to identify understand and handle these imperfections.\n6  Importing Data and Creating a tsibble: Time series data comes from everywhere – csv files, APIs, databases and excel files. Some of these sources might have inconsistent date formats, dates being stored as strings and time zones being mixed up. In this chapter you will be provided with practical strategies for importing temporal data and handling different date formats\n\nThroughout this section we will primarily use these essential packages lubridate, tsibble, dplyr, tidyr. By the end of this section you will have mastered the crucial first step in any time series analysis: creating a valid, gap-aware tsibble from raw data. This is not just busy work, it is about building a solid foundation.\nA well structured tsibble ensures that every analysis, visualisation, and forecast that follows is built on accurate and understandable temporal data.",
    "crumbs": [
      "Working with Time Series Data"
    ]
  }
]